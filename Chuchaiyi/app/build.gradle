apply plugin: 'com.android.application'
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.ccy.chuchaiyi"
        minSdkVersion 10
        targetSdkVersion 23
        versionCode 2
        versionName "1.2.0"
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME : "com.ccy.chuchaiyi",
                JPUSH_APPKEY : "fa4a1f0c6022e5cd2a7331ea", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }
    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        abortOnError false
    }

    //签名
    signingConfigs {
        debug {
            // No debug config
        }

        relealse {
            //这样写就得把demo.jk文件放在项目目录
            storeFile file("release.jks")
            storePassword "123456"
            keyAlias "chuchaiyi"
            keyPassword "123456"
        }
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.relealse
        }
    }



    productFlavors {

        yingyongbao {}
        baidu {}
        c360 {}
        huawei {}

        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }

    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            def today = new Date()
            if (variant.buildType.getName().equals("release")) {
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def fileName = outputFile.name.replace(".apk", "-" + today.format('yyyyMMddHHmm') + "-${defaultConfig.versionName}.apk")
                    output.outputFile = new File(outputFile.parent, fileName)
                }
            }
        }
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile project(':applibrary')
    compile project(':androidPullToRefreshRecyclerViewlibrary')
    compile 'com.jakewharton:butterknife:7.0.1'
    compile files('libs/pinyin4j-2.5.0.jar')
    compile 'de.greenrobot:greendao:2.1.0'
    compile 'cn.jiguang:jpush:2.1.8'
//    compile 'com.github.bmelnychuk:atv:1.2.+'
    compile 'com.tencent.bugly:crashreport:2.1.9' //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    compile 'com.tencent.bugly:nativecrashreport:3.0'
}
